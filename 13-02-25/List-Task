package Collections;

import java.util.ArrayList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;

public class ListSample {
        public static void main(String[] args) {
            ArrayListThread t1 = new ArrayListThread();
            t1.start();

            LinkedListThread t2 = new LinkedListThread();
            t2.start();

            StackThread t3 = new StackThread();
            t3.start();

            vectorThread t4 = new vectorThread();
            t4.start();
        }

}
class ArrayListThread extends Thread {
    public void run() {
        List<Integer> list1 = new ArrayList<>();
        //System.out.println("Is list1 empty? "+list1.isEmpty());
        list1.add(35);
        list1.add(23);
        list1.add(67);
        list1.add(82);
        list1.add(56);
        list1.add(49);
        list1.add(49);
        list1.add(49);
        //System.out.println("Is list1 empty? "+list1.isEmpty());
        //  System.out.println("The given list is:"+list1);
        System.out.println("Number of elements in the list: " + list1.size());
        //Adding one element
        list1.add(12);
        System.out.println("After adding one element:");
        System.out.println("The given list is :" + list1);
        System.out.println("The number of elements in the list: " + list1.size());
//Checking for an element
        System.out.println("Is 566 available in the list:" + list1.contains(566));
        System.out.println("The given list before removing elements is :" + list1);
        list1.remove(2);//Removing element by its index
        list1.remove(3);//Removing element by its index
        System.out.println("After removing elements:");
        System.out.println("The given list is :" + list1);
        System.out.println("The number of elements in the list: " + list1.size());
        System.out.println("---------------------------------------------------");
    }
}
class LinkedListThread extends Thread {
    public void run() {
        List<Character> list1 = new ArrayList<>();
        list1.add('a');
        list1.add('b');
        list1.add('c');
        list1.add('d');
        list1.add('e');
        list1.add('f');
        System.out.println("Number of elements in the Linkedlist: " + list1.size());
        list1.add('g');
        System.out.println("After adding one element:");
        System.out.println("The given  linkedlist is :" + list1);
        System.out.println("The number of elements in the list: " + list1.size());
        System.out.println("Is b available in the list:" + list1.contains('b'));
        System.out.println("The given  linkedlist before removing elements is :" + list1);
        list1.remove(1);
        list1.remove(4);
        System.out.println("After removing elements:");
        System.out.println("The given  linkedlist before removing elements is :" + list1);
        System.out.println("The number of elements in the list: " + list1.size());
        System.out.println("---------------------------------------------------");

    }

}
class vectorThread extends Thread {
    public void run() {
        List<String> list1 = new Vector<>();
        list1.add("Hii");
        list1.add("Hello");
        list1.add("World");
        System.out.println("Number of elements in the vector: " + list1.size());
        list1.add(1, "Hello");
        list1.add(2, "World");
        System.out.println("After adding one element:");
        System.out.println("The given  vector is :" + list1);
        System.out.println("The number of elements in the list: " + list1.size());
        System.out.println("Is b available in the vector:" + list1.contains(1));
        System.out.println("The given  vector before removing elements is :" + list1);
        list1.remove(1);
        System.out.println("After removing elements:");
        System.out.println("The given  vector before removing elements is :" + list1);
        System.out.println("The number of elements in the list: " + list1.size());
        System.out.println("---------------------------------------------------");


    }
}
class StackThread extends Thread {
    public void run() {
        Stack<Object> list1 = new Stack<>();
        list1.add("Hello");
        list1.add("World");
        list1.add("hii");
        System.out.println("Number of elements in the Stack: " + list1.size());
        list1.add(4);
        System.out.println("After adding one element:");
        System.out.println("The given  stack is :" + list1);
        System.out.println("The number of elements in the list: " + list1.size());
        System.out.println("Is b available in the Stack:" + list1.contains(4));
        System.out.println("The given  stack before removing elements is :" + list1);
        list1.pop();
        list1.pop();
        System.out.println("After removing elements:");
        System.out.println("The given  stack before removing elements is :" + list1);
        System.out.println("The number of elements in the list: " + list1.size());
        System.out.println("---------------------------------------------------");
    }
}
